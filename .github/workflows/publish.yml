name: publish
on:
  create:
    tags:
      - "v*.*.*"
  
jobs:
  build:
    name: Build and Release
    if: ${{ StartsWith(github.ref, 'refs/tags/') }}
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
      
    - name: dotnet build
      run: |
        dotnet nuget add source --username Milkitic --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Milkitic/index.json"     
        dotnet build --configuration Release
     
    - name: dotnet pack
      run: |
        dotnet pack --no-build Coosu.Database --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Shared --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard.Extensions --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard.OsbX --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Beatmap --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Api --configuration Release --output ci-pack
        
    - name: action-minver
      uses: thefringeninja/action-minver@2.0.0-preview1
      id: version
      with:
        tag-prefix: v
        minimum-major-minor: 1.0
      
    - name: Create new GitHub release
      uses: softprops/action-gh-release@v1
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_TOKEN: ${{secrets.MILKI_COOSU_TOKEN}}
      with:
        name: v${{ steps.version.outputs.version }}
        prerelease: true
        draft: false
        files: |
          ./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg

    # - name: Push Github Package
    #   if: ${{ success() }}
    #   run: |
    #     dotnet nuget push "./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"
    #     dotnet nuget push "./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.MILKI_COOSU_TOKEN}} --source "github"

    - name: Push Nuget Package
      if: ${{ success() }}
      run: |
        dotnet nuget push "./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
