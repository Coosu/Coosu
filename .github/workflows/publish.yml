name: publish
on:
  create:
    tags:
      - "v*.*.*"
  
jobs:
  build:
    name: Build and Release
    if: ${{ StartsWith(github.ref, 'refs/tags/') }}
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
      
    - name: dotnet pack
      run: |
        dotnet nuget add source --username Milkitic --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Milkitic/index.json"     
        dotnet build --configuration Release
        dotnet pack --no-build Coosu.Shared --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard.Extensions --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Storyboard.OsbX --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Beatmap --configuration Release --output ci-pack
        dotnet pack --no-build Coosu.Api --configuration Release --output ci-pack
        
    - name: action-minver
      uses: thefringeninja/action-minver@2.0.0-preview1
      id: version
      with:
        tag-prefix: v
        minimum-major-minor: 1.0
      
    - name: Create a new GitHub release if a new tag is pushed
      uses: softprops/action-gh-release@v1
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_TOKEN: ${{secrets.NUGET_API_KEY}}
      with:
        name: v${{ steps.version.outputs.version }}
        prerelease: true
        draft: false
        files: |
          ./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg
          ./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg

    - name: Create Github Package
      if: ${{ success() }}
      run: |
        dotnet nuget push "./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"
        dotnet nuget push "./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "github"

    - name: Create Github Package
      if: ${{ success() }}
      run: |
        dotnet nuget push "./ci-pack/Coosu.Database.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Shared.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.Extensions.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Storyboard.OsbX.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Beatmap.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
        dotnet nuget push "./ci-pack/Coosu.Api.${{ steps.version.outputs.version }}.nupkg"  --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json"
                
    # - name: Nuget Publish Coosu.Database
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Database/Coosu.Database.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Shared
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Shared/Coosu.Shared.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Storyboard
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Storyboard/Coosu.Storyboard.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Storyboard.Extensions
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Storyboard.Extensions/Coosu.Storyboard.Extensions.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Storyboard.OsbX
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Storyboard.OsbX/Coosu.Storyboard.OsbX.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Beatmap
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Beatmap/Coosu.Beatmap.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false

    # - name: Nuget Publish Coosu.Api
    #   uses: Rebel028/publish-nuget@v2.7.0
    #   continue-on-error: true
    #   with:
    #     PROJECT_FILE_PATH: Coosu.Api/Coosu.Api.csproj
    #     VERSION_STATIC: ${{ steps.version.outputs.version }}
    #     NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #     GITHUB_USER: Milkitic
    #     TAG_COMMIT: false
